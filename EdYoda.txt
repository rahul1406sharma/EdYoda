// Question 2:
// Merge the two arrays as keys and values into an object.
// If the key names contain '-' then convert it to camelcasing. 
// If there are duplicate values in keys array then add one key but merge values into an array.


Answer:

   function mergeArrays(keys, values) {
        let CamelCaseKeyArray = stringCamelCasing(keys);
        let CamelCaseValueArray = stringCamelCasing(values);
        let mergedArray = mergeArray(stringCamelCasing(keys), stringCamelCasing(values));

    

        console.log(mergedArray);
    }

    let stringCamelCasing = (theStringArray) => {
        let camelCasedStringArray = [];
        for (let i = 0; i < theStringArray.length; i++) {
            camelCasedStringArray.push(theStringArray[i].replace(/-([a-z])/g, function (m, w) {
                return w.toUpperCase();

            })
            )

        }
        return camelCasedStringArray;
    }

    let mergeArray = (keyArray, valueArray) => {
        let CamlCaseArray = valueArray.reduce(function (result, field, index) {
            result[keyArray[index]] = field;
            return result;
        }, {})
        return CamlCaseArray;
    }




